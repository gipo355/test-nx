{
  "name": "@courses-pnpm/natours",
  "version": "1.0.0",
  "dependencies": {
    "@prisma/client": "4.7.1",
    "dotenv-defaults": "5.0.2",
    "express": "4.18.2",
    "express-mongo-sanitize": "2.2.0",
    "express-validator": "6.14.2",
    "helmet": "6.0.0",
    "mongoose": "6.8.0",
    "morgan": "1.10.0",
    "prisma": "4.6.1",
    "slugify": "1.6.5",
    "validator": "13.7.0",
    "winston": "3.8.2",
    "workerpool": "6.3.1"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "main": "./src/main.ts",
  "scripts": {
    "babel-node": "babel-node ./src/main.ts --extensions .ts,.js",
    "build": "NODE_ENV=production webpack --config ./webpack.back.js && cd dist && pwd",
    "build-2": "babel ./src --out-dir ./dist --extensions .ts --root-mode upward",
    "build-and-start": "babel ./src --out-dir ./dist --extensions .ts && node ./dist/index.js",
    "build-asdfasdf": "NODE_ENV=production webpack --config ./webpack.back.js && cd dist && pwd && npm i --package-lock-only",
    "build-dev": "webpack --config ./webpack.back.dev.js",
    "build-dev-debug": "webpack --config ./webpack.back.dev.js --devtool source-map",
    "build-dev:watch:webpack": "webpack --config ./webpack.back.dev.js --watch",
    "build-dev:watch:webpack-debug": "webpack --config ./webpack.back.dev.js --devtool source-map --watch",
    "build2": "babel ./src --out-dir ./dist --ignore ./src/__tests__ --extensions .ts,.js",
    "build:serve": "NODE_ENV=production run-s build serve",
    "build:watch:webpack": "webpack --env production --config ./webpack.back.js --watch",
    "debug": "NODE_ENV=development npm-run-all --sequential build-dev --parallel build-dev:watch:webpack-debug dev0-debug",
    "debug0": "run-s build-dev-debug serve-debug",
    "debug2": "node -r ts-node/register",
    "dev": "NODE_ENV=development npm-run-all --sequential build-dev --parallel build-dev:watch:webpack dev0",
    "dev-nodemon": "nodemon --exec babel-node ./src/main.ts --extensions .ts,.js",
    "dev0": "cd dist && nodemon main.js",
    "dev0-debug": "cd dist && nodemon --inspect main.js",
    "dev00": "nodemon --watch dist --ext '.js,.ts,.tsx,.jsx' --exec 'node ./dist/main.js'",
    "dev1": "nodemon --ext '.js,.ts,.tsx,.jsx' --watch src --exec 'npm-run-all --parallel tsc:lint lint:eslint_d --sequential babel-node'",
    "dev2": "nodemon --watch src/ --exec \"babel ./src --out-dir ./dist --ignore ./src/__tests__ --extensions .ts,.js && node --inspect dist/main.js\"",
    "dev3": "nodemon --ext '.js,.ts,.tsx,.jsx' --watch src --exec 'run-s build-dev serve'",
    "dev4": "npm-run-all --parallel tsc:lint:watch lint:eslint_d:watch dev-nodemon",
    "dev5": "nodemon --ext '.js,.ts,.tsx,.jsx' ./dist/main.js",
    "dev6": "tsc --watch",
    "devvvv": "nodemon src/main.ts",
    "generate-barrels": "barrelsby -D -q -l below -d src && npm run lint:eslint:fix",
    "lint": "eslint --fix --ext .js,.ts,.tsx,.jsx src",
    "lint-all": "npm-run-all --parallel lint:eslint",
    "lint-all:fix": "npm-run-all --parallel lint:eslint:fix lint:stylelint:fix",
    "lint:eslint": "eslint --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint:fix": "eslint --fix --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint:watch": "nodemon --watch src --exec eslint --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint_d": "eslint_d --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint_d:watch": "nodemon --ext '.js,.ts,.tsx,.jsx' --watch src  --exec 'eslint_d --ext .js,.ts,.tsx,.jsx src'",
    "lint:stylelint": "stylelint 'src/**/*.{css,scss,less,sass}'",
    "lint:stylelint:fix": "stylelint --fix 'src/**/*.{css,scss,less,sass}' --allow-empty-input",
    "nodemon:main": "nodemon dist/main.js",
    "serve": "NODE_ENV=production cd dist && pwd && node main.js",
    "serve-debug": "NODE_ENV=production cd dist && pwd && node --inspect-brk main.js",
    "start": "node main.js",
    "test": "jest --verbose --detectOpenHandles ./src/__tests__ --coverage --passWithNoTests",
    "tsc:build": "tsc",
    "tsc:lint": "tsc --noEmit",
    "tsc:lint:watch": "tsc --noEmit --watch",
    "tsc:watch": "tsc --watch"
  }
}
