{
  "name": "@courses-pnpm/natours",
  "version": "1.0.0",
  "dependencies": {
    "@aws-sdk/client-ses": "3.441.0",
    "@aws-sdk/credential-provider-node": "3.441.0",
    "@prisma/client": "5.5.2",
    "@sentry/node": "7.77.0",
    "bcrypt": "5.1.1",
    "bullmq": "4.12.9",
    "compression": "1.7.4",
    "cookie-parser": "1.4.6",
    "cors": "2.8.5",
    "csrf-csrf": "3.0.2",
    "dotenv-defaults": "5.0.2",
    "express": "4.18.2",
    "express-mongo-sanitize": "2.2.0",
    "express-status-monitor": "1.3.4",
    "express-validator": "7.0.1",
    "helmet": "7.0.0",
    "hpp": "0.2.3",
    "html-to-text": "9.0.5",
    "imagekit": "4.1.3",
    "infisical-node": "1.5.0",
    "ioredis": "5.3.2",
    "jsonwebtoken": "9.0.2",
    "klona": "2.0.6",
    "mongoose": "8.0.0",
    "morgan": "1.10.0",
    "multer": "1.4.5-lts.1",
    "nodemailer": "6.9.7",
    "passport": "0.6.0",
    "passport-jwt": "4.0.1",
    "prisma": "5.5.2",
    "pug": "3.0.2",
    "rate-limiter-flexible": "3.0.3",
    "sharp": "0.32.6",
    "slugify": "1.6.6",
    "stripe": "14.3.0",
    "swagger-jsdoc": "6.2.8",
    "swagger-ui-express": "5.0.0",
    "validator": "13.11.0",
    "winston": "3.11.0",
    "workerpool": "8.0.0",
    "xss-clean": "0.1.1"
  },
  "devDependencies": {
    "@types/bcrypt": "10.0.28-alpha",
    "@types/compression": "1.7.4",
    "@types/cookie-parser": "1.4.5",
    "@types/cors": "2.8.15",
    "@types/dotenv-defaults": "2.0.3",
    "@types/express": "4.17.20",
    "@types/express-status-monitor": "1.3.2",
    "@types/hpp": "0.2.4",
    "@types/html-to-text": "9.0.3",
    "@types/jsonwebtoken": "9.0.4",
    "@types/morgan": "1.9.7",
    "@types/multer": "1.4.9",
    "@types/nodemailer": "6.4.13",
    "@types/passport": "1.0.14",
    "@types/passport-jwt": "3.0.12",
    "@types/pug": "2.0.8",
    "@types/swagger-jsdoc": "6.0.2",
    "@types/swagger-ui-express": "4.1.5",
    "@types/validator": "13.11.5",
    "@types/workerpool": "6.4.5"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "main": "./src/main.ts",
  "prisma": {
    "schema": "src/database/prisma/schema.prisma"
  },
  "scripts": {
    "build": "NODE_ENV=production run-s generate-docs build-prod",
    "build-debug": "NODE_ENV=production DEBUG=true run-s generate-docs build-prod",
    "build-dev": "webpack --config ./webpack.back.dev.js",
    "build-dev-debug": "DEBUG=TRUE NODE_ENV=development webpack --config ./webpack.back.dev.js --devtool source-map",
    "build-dev:watch:webpack": "webpack --config ./webpack.back.dev.js --watch",
    "build-dev:watch:webpack-debug": "webpack --config ./webpack.back.dev.js --devtool source-map --watch",
    "build-prod": "NODE_ENV=production webpack --config ./webpack.back.js",
    "build-prod:watch:webpack-debug": "webpack --config ./webpack.back.js --devtool source-map --watch",
    "build-test": "TESTBUILD=true webpack --config ./webpack.back.dev.js",
    "build:pm2": "NODE_ENV=production run-s build pm2-start",
    "build:serve": "NODE_ENV=production run-s build serve",
    "build:watch:webpack": "webpack --env production --config ./webpack.back.js --watch",
    "debug2": "NODE_ENV=development npm-run-all --sequential build-dev-debug --parallel build-dev:watch:webpack-debug dev0-debug",
    "debug:dev": "NODE_ENV=development DEBUG=true npm-run-all --sequential build-dev-debug --parallel build-dev:watch:webpack-debug dev0-debug",
    "debug:prod": "NODE_ENV=production DEBUG=true npm-run-all --sequential build-debug --parallel build-prod:watch:webpack-debug prod0-debug",
    "dev": "NODE_ENV=development npm-run-all --sequential build-dev --parallel build-dev:watch:webpack dev0",
    "dev0": "cd dist && nodemon --exec 'node main.js --experimental-permissions'",
    "dev0-debug": "cd dist && nodemon --exec 'node --expose-gc --inspect-brk --enable-source-maps main.js'",
    "dev00": "cd dist && nodemon --exec 'node --trace-sync-io main.js'",
    "generate-barrels": "barrelsby -D -q -l below -d src && npm run lint:eslint_d:fix",
    "generate-dependency-graph": "depcruise src --include-only \"^src\" --config --output-type dot | dot -T svg > ./src/docs/dependency-graph.svg",
    "generate-dependency-graph2": "madge --image ./src/docs/dependency-graph.svg --extensions js,jsx,ts,tsx,mjs,mts,cjs,cts ./src",
    "generate-docs": "run-s generate-openapi generate-typedoc generate-dependency-graph",
    "generate-openapi": "ts-node ./src/docs/generateSwaggerOutput.ts",
    "generate-typedoc": "typedoc",
    "lint": "NODE_ENV=production npm-run-all --parallel lint:eslint_d tsc:lint",
    "lint-all": "npm-run-all --parallel lint:eslint_d tsc:lint",
    "lint-all:fix": "npm-run-all --parallel lint:eslint:fix",
    "lint:eslint": "eslint --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint:fix": "eslint --fix --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint:watch": "nodemon --watch src --exec eslint --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint_d": "NODE_ENV=production eslint_d --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint_d:fix": "eslint_d --fix --ext .js,.ts,.tsx,.jsx src",
    "lint:eslint_d:watch": "nodemon --ext '.js,.ts,.tsx,.jsx' --watch src  --exec 'eslint_d --ext .js,.ts,.tsx,.jsx src'",
    "migrate": "prisma migrate dev",
    "pm2-start": "cd dist && pm2 start ecosystem.config.js",
    "pm2-startOld": "cd dist && pm2 -i 0 start ecosystem.config.js",
    "prod0-debug": "cd dist && nodemon --exec 'node --expose-gc --inspect-brk --enable-source-maps main.js'",
    "serve": "NODE_ENV=production cd dist && pwd && node main.js",
    "start": "node main.js",
    "test": "run-s build-test test1",
    "test0": "jest --verbose --forceExit --detectOpenHandles ./src/__tests__ --coverage --passWithNoTests",
    "test1": "jest --verbose --forceExit --detectOpenHandles ./test-dist --coverage --passWithNoTests",
    "tsc:build": "tsc",
    "tsc:lint": "NODE_ENV=production tsc --noEmit"
  }
}
